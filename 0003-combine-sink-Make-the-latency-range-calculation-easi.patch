From a25631e0c31349d8c41c343dad6161f21de66d1f Mon Sep 17 00:00:00 2001
From: Tanu Kaskinen <tanu.kaskinen@linux.intel.com>
Date: Tue, 20 Jan 2015 15:33:58 +0100
Subject: [PATCH 3/6] combine-sink: Make the latency range calculation easier
 to read

I think this is much easier to understand. This should not result in
any functional change.
---
 src/modules/module-combine.c | 15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

diff --git a/src/modules/module-combine.c b/src/modules/module-combine.c
index 249bf64..cf9c372 100644
--- a/src/modules/module-combine.c
+++ b/src/modules/module-combine.c
@@ -713,15 +713,20 @@ static void update_latency_range(struct userdata *u) {
             max_latency = max;
     }
     if (max_latency == (pa_usec_t) -1) {
-        /* no outputs, use block size */
+        /* No outputs, use default limits. */
         min_latency = u->default_min_latency;
         max_latency = u->default_max_latency;
     }
-    else if (max_latency < min_latency)
-        max_latency = min_latency;
 
-    /* never go below the min_latency or BLOCK_USEC */
-    max_latency = MIN (max_latency, MAX (min_latency, BLOCK_USEC));
+    /* As long as we don't support rewinding, we should limit the max latency
+     * to a conservative value. */
+    if (max_latency > u->default_max_latency)
+        max_latency = u->default_max_latency;
+
+    /* Never ever try to set lower max latency than min latency, it just
+     * doesn't make sense. */
+    if (max_latency < min_latency)
+        max_latency = min_latency;
 
     pa_log_debug("Sink update latency range %lu %lu", min_latency, max_latency);
     pa_sink_set_latency_range_within_thread(u->sink, min_latency, max_latency);
-- 
1.9.3

